# Generated by Django 5.2 on 2025-05-13 21:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('lessons', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('time_limit', models.PositiveIntegerField(default=0, help_text='Time limit in minutes (0 for no limit)')),
                ('passing_score', models.PositiveIntegerField(default=70, help_text='Percentage required to pass')),
                ('locked', models.BooleanField(default=True, help_text='Lock this exam for non-admin users')),
                ('shuffle_questions', models.BooleanField(default=False)),
                ('show_correct_answers', models.BooleanField(default=True, help_text='Show correct answers after submission')),
                ('grading_period', models.CharField(choices=[('prelim', 'Prelim'), ('midterm', 'Midterm'), ('prefinal', 'Prefinal'), ('final', 'Final')], default='prelim', max_length=10)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exams', to='lessons.lesson')),
            ],
            options={
                'verbose_name_plural': 'exams',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExamAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('raw_points', models.FloatField(blank=True, null=True)),
                ('total_points', models.FloatField(blank=True, null=True)),
                ('passed', models.BooleanField(default=False)),
                ('completed', models.BooleanField(default=False)),
                ('grading_period', models.CharField(blank=True, choices=[('prelim', 'Prelim'), ('midterm', 'Midterm'), ('prefinal', 'Prefinal'), ('final', 'Final')], help_text='Cached grading period for dashboard filtering', max_length=10, null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.exam')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='ExamQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('identification', 'Identification'), ('fill_in_the_blanks', 'Fill in the Blanks')], default='multiple_choice', max_length=20)),
                ('explanation', models.TextField(blank=True)),
                ('points', models.PositiveIntegerField(default=1)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='exams.exam')),
            ],
        ),
        migrations.CreateModel(
            name='ExamAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500)),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='exams.examquestion')),
            ],
        ),
        migrations.CreateModel(
            name='ExamUserAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_answer', models.TextField(blank=True, null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('partial_score', models.PositiveIntegerField(default=0, help_text='Number of correct blanks for fill-in-the-blanks questions')),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_answers', to='exams.examattempt')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_user_answers', to='exams.examquestion')),
                ('selected_answers', models.ManyToManyField(blank=True, related_name='exam_user_selected_answers', to='exams.examanswer')),
            ],
        ),
        migrations.AddConstraint(
            model_name='exam',
            constraint=models.UniqueConstraint(fields=('grading_period',), name='unique_exam_per_period'),
        ),
        migrations.AlterUniqueTogether(
            name='examuseranswer',
            unique_together={('attempt', 'question')},
        ),
    ]
